// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Models;

namespace Model.Migrations
{
    [DbContext(typeof(MyCoreAdminDBContext))]
    [Migration("20190125101303_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Models.Attribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int?>("TypeId");

                    b.HasKey("AttributeId");

                    b.HasIndex("TypeId");

                    b.ToTable("ATTRIBUTE");
                });

            modelBuilder.Entity("Model.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("BranchId");

                    b.ToTable("BRANCH");
                });

            modelBuilder.Entity("Model.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("BranchId");

                    b.Property<DateTime?>("EstablishedDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Quantity");

                    b.Property<int>("TypeId");

                    b.HasKey("ProductId");

                    b.HasIndex("BranchId");

                    b.HasIndex("TypeId");

                    b.ToTable("PRODUCT");
                });

            modelBuilder.Entity("Model.Models.ProductAttribute", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("AttributeId");

                    b.Property<string>("AttributeValue")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("ProductId", "AttributeId")
                        .HasName("PK__PRODUCT___081454530E839143");

                    b.HasIndex("AttributeId");

                    b.ToTable("PRODUCT_ATTRIBUTE");
                });

            modelBuilder.Entity("Model.Models.Type", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.HasKey("TypeId");

                    b.ToTable("TYPE");
                });

            modelBuilder.Entity("Model.Models.Attribute", b =>
                {
                    b.HasOne("Model.Models.Type", "Type")
                        .WithMany("Attribute")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_ATTRIBUTE_TYPE");
                });

            modelBuilder.Entity("Model.Models.Product", b =>
                {
                    b.HasOne("Model.Models.Branch", "Branch")
                        .WithMany("Product")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_PRODUCT_BRANCH");

                    b.HasOne("Model.Models.Type", "Type")
                        .WithMany("Product")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_PRODUCT_TYPE");
                });

            modelBuilder.Entity("Model.Models.ProductAttribute", b =>
                {
                    b.HasOne("Model.Models.Attribute", "Attribute")
                        .WithMany("ProductAttribute")
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("FK_PRODUCT_ATTRIBUTE_ATTRIBUTE1");

                    b.HasOne("Model.Models.Product", "Product")
                        .WithMany("ProductAttribute")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_PRODUCT_ATTRIBUTE_PRODUCT");
                });
#pragma warning restore 612, 618
        }
    }
}
