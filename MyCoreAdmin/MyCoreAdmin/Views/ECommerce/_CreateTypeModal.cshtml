@model Model.Models.Type
@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

<!-- Modal -->
<div class="modal fade" id="modalCreateType" tabindex="-1" role="dialog" aria-labelledby="createTypeTittle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalBranchTittle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/ECommerce/CreateType" method="post" id="validationform" data-parsley-validate="" novalidate="">
                    @Html.AntiForgeryToken()

                    @*<input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />*@
                    <div class="form-group">
                        <label for="inputUserName">Type Name</label>
                        <input type="text" id="TypeName" name="TypeName" required placeholder="Enter type name" class="form-control">
                    </div>
                    <div class="form-group">
                        <input type="hidden" id="BranchId" name="BranchId" required class="form-control">
                    </div>
                    <div class="form-group">
                        @*Get stringBase64 when crop image success*@
                        <input type="hidden" id="stringBase64" name="stringBase64" required class="form-control">
                        @*------------------------------------------*@
                        <label for="inputUserName">Image Display</label>
                        <input type="file" id="upload" value="Upload image" accept="image/*" required class="form-control" />
                        <div style="height:300px;width:300px">
                            <div id="upload-demo"></div>
                        </div>
                    </div>
                    <br />
                    <br />
                    <div class="row">
                        <div class="col-sm-12 pl-0">
                            <p class="text-right">
                                <button type="button" class="btn btn-space btn-primary upload-result">Submit</button>
                                <button type="reset" class="btn btn-space btn-secondary">Cancel</button>
                            </p>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="~/vendor/exif-js/exif.js"></script>
<script src="~/vendor/sweetalert/dist/sweetalert.min.js"></script>

<script src="~/vendor/parsley/parsley.js"></script>

<!-- Croppie JS -->
<script src="~/vendor/croppie/dist/croppie.js"></script>
<script>
    var Demo = (function () {

        function popupResult(result) {
            var html;
            if (result.html) {
                html = result.html;
            }
            if (result.src) {
                html = '<img src="' + result.src + '" />';
            }
            swal({
                title: '',
                html: true,
                text: html,
                allowOutsideClick: true
            });
            setTimeout(function () {
                $('.sweet-alert').css('margin', function () {
                    var top = -1 * ($(this).height() / 2),
                        left = -1 * ($(this).width() / 2);

                    return top + 'px 0 0 ' + left + 'px';
                });
            }, 1);
        }

        function demoUpload() {
            var $uploadCrop;

            function readFile(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('.upload-demo').addClass('ready');
                        $uploadCrop.croppie('bind', {
                            url: e.target.result
                        }).then(function () {
                            console.log('jQuery bind complete');
                        });

                    };

                    reader.readAsDataURL(input.files[0]);
                } else {
                    swal("Sorry - you're browser doesn't support the FileReader API");
                }
            }

            $uploadCrop = $('#upload-demo').croppie({
                viewport: {
                    width: 200,
                    height: 200,
                    type: 'square'
                },
                enableExif: true
            });

            $('#upload').on('change', function () {
                readFile(this);
            });
            $('.upload-result').on('click', function () {
                $uploadCrop.croppie('result', {
                    type: 'canvas',
                    size: { width: 425, height: 425 }
                }).then(function (resp) {
                    document.getElementById("stringBase64").value = resp;
                    alert("Đợi cú truyền stringBase64 ảnh lên input rồi submit nhé...!!!");
                    $('#validationform').submit();
                });
            });
        }

        function init() {
            demoUpload();
        }

        return {
            init: init
        };
    })();
    Demo.init();
</script>

